# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Jobs do ambiente de desenvolvimento
  build-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Realiza o checkout do repositório
        uses: actions/checkout@v4
      - name: Configura o JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Compila o projeto com Maven
        run: mvn -B compile --file pom.xml

  # Jobs do ambiente de homologação
  build-hmg:
    runs-on: ubuntu-latest
    environment:
      name: hmg
    needs: build-dev
    steps:
      - name: Realiza o checkout do repositório
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configura o JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Testa o projeto com Maven
        run: mvn -B test --file pom.xml

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=laurafoes_calculator-java

  # Jobs do ambiente de produção
  build-prd:
    runs-on: ubuntu-latest
    environment:
      name: prd
    needs: build-hmg
    steps:
      - name: Realiza o checkout do repositório
        uses: actions/checkout@v4
      - name: Configura o JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      # Executa o empacotamento do projeto com o Maven.
      # O parâmetro -DskipTests pula os testes pois já foram executados no ambiente anterior.
      - name: Empacota o projeto com Maven
        run: mvn -B package --file pom.xml -DskipTests
      # Cria o artefato de download
      - name: Crie uma pasta temporária de downloads de artefatos
        run: mkdir staging
      - name: Copia os artefatos a serem publicados na pasta temporária
        run: cp target/*jar-with-dependencies.jar staging || true
      - name: Usa Upload Artifact do GitHub Action
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
